import pandas as pd
from datetime import datetime
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import numpy as np

# Load the data
brent_data = pd.read_csv("/kaggle/brent_seasonality_comma-2.txt")

# Parse the 'date' column to datetime format
brent_data['date'] = pd.to_datetime(brent_data['date'], format='%d.%m.%Y')

# Calculate the difference between the 'price' for each day and the next day
brent_data['price_diff'] = brent_data['price'].diff()

# Remove the first row since it has no previous day to compare with
brent_data = brent_data.iloc[1:]

# Group the data by day of the year and calculate the average difference for each day
average_diff = brent_data.groupby(brent_data['date'].dt.dayofyear)['price_diff'].mean()

# Create a new DataFrame that maps each day of the year to a date in the current year
current_year = datetime.now().year
dates = pd.DataFrame({
    'day_of_year': range(1, 366),
    'date': pd.date_range(f'{current_year}-01-01', f'{current_year}-12-31')
})

# Format the date as '%d.%m.%Y'
dates['date'] = dates['date'].dt.strftime('%d.%m.%Y')

# Merge the two DataFrames on the day of the year
result = pd.merge(dates, average_diff, left_on='day_of_year', right_index=True)

# Round the 'price_diff' column to zero decimal places
result['price_diff'] = result['price_diff'].round(0)

# Create a vertical bar plot
plt.figure(figsize=(10, 6))
colors = cm.rainbow(np.linspace(0, 1, len(result)))
plt.bar(result['date'], result['price_diff'], color=colors)
plt.xticks(rotation=90)
plt.xlabel('Date')
plt.ylabel('Average Price Difference')
plt.title('Average Price Difference by Date')
plt.show()